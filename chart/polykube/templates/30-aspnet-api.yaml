---
kind: Deployment
apiVersion: extensions/v1beta1
metadata:
  name: "aspnet-api"
  namespace: "{{ template "name" }}"
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
spec:
  replicas: 3
  template:
    metadata:
      namespace: {{ template "name" }}
      labels:
        name: "aspnet-api"
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    spec:
      imagePullSecrets:
      - name: acr-image-pull-secret
      containers:
      - name: aspnet-api
        image: {{ .Values.image.registry }}/{{ template "name" }}-aspnet-api:{{ .Values.image.tag }}
        imagePullPolicy: Always
        env:
        - name: LISTEN_HOST
          value: '0.0.0.0'
        - name: LISTEN_PORT
          value: '8000'
        - name: REDIS_HOST
          value: 'redis'
        - name: REDIS_PORT
          value: '6379'
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis
              key: password
        - name: DATABASE_NAME
          value: 'polykubedb'
        - name: MSSQL_HOST
          value: 'mssql'
        - name: MSSQL_PORT
          value: '5432'
        - name: MSSQL_USERNAME
          value: 'SA'
        - name: MSSQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mssql
              key: password
        ports:
        - containerPort: 8000
        readinessProbe:
          httpGet:
            path: '/info?api-version=1.0'
            port: 8000
          initialDelaySeconds: 10
          timeoutSeconds: 1
        livenessProbe:
          httpGet:
            path: '/info?api-version=1.0'
            port: 8000
          initialDelaySeconds: 10
          timeoutSeconds: 1
      - name: aspnet-nginx
        image: {{ .Values.image.registry}}/{{ template "name" }}-aspnet-api-nginx:{{ .Values.image.tag }}
        imagePullPolicy: Always
        env:
        - name: LISTEN_PORT
          value: '80'
        - name: BACKEND_HOST
          value: '0.0.0.0'
        - name: BACKEND_PORT
          value: '8000'
        ports:
        - containerPort: 80
---
kind: Service
apiVersion: v1
metadata:
  name: "aspnet-api"
  namespace: "{{ template "name" }}"
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
spec:
  selector:
    name: "aspnet-api"
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
  ports:
  - port: 80
    targetPort: 80
